Menu="Main:4"
Title="Unassigned Devices"
Markdown="false"
---
<?PHP
$plugin = "unassigned.devices";
$zip = str_replace(' ','_',strtolower($var['NAME']))."-unassigned.devices-".date('Ymd-Hi').".zip";
require_once("plugins/${plugin}/include/lib.php");
if (file_exists("plugins/dynamix/OpenDevices.page")) @rename("plugins/dynamix/OpenDevices.page","plugins/dynamix/OpenDevices.page-");
?>
<link rel="stylesheet" type="text/css" href="/plugins/<?=$plugin;?>/assets/waitMe.min.css">

<?if (is_file("webGui/scripts/jquery.switchButton.js")): # Pre 6.1?>
	<script type="text/javascript" src="/webGui/scripts/jquery.switchButton.js"></script>
	<link type="text/css" rel="stylesheet" href="/webGui/styles/jquery-ui.min.css">
	<link type="text/css" rel="stylesheet" href="/webGui/styles/jquery.switchButton.css">
<?else: # Post 6.1?>
	<script type="text/javascript" src="/webGui/javascript/jquery.switchbutton.js"></script>
	<link type="text/css" rel="stylesheet" href="/webGui/styles/jquery.ui.css">
	<link type="text/css" rel="stylesheet" href="/webGui/styles/jquery.switchbutton.css">
<?endif;?>

<script type="text/javascript" src="/plugins/<?=$plugin;?>/assets/waitMe.min.js"></script>
<link rel="stylesheet" type="text/css" href="/plugins/<?=$plugin;?>/assets/style-<?=$display['theme'];?>.css">

<script type="text/javascript">
	var this_tab = $('input[name$="tabs"]').length;
	var URL = '/plugins/<?=$plugin;?>/UnassignedDevices.php';
	$(function() {
		var content = "<div class='switch-wrapper'><input type='checkbox' class='complete-switch'></div><button title='Rescan All Unassigned Disks.' type='button' onclick='$.post(\""+URL+"\",{\"action\":\"rescan_disks\"});' value='Rescan Disks'>Rescan Disks</button><button title='Display the Unassigned Devices Log.' type='button' onclick='openWindow(\"/webGui/scripts/tail_log&arg1=unassigned.devices.log\",\"Log Information\",600,900);' value='Log'>Log</button>";
		<?if (!$tabbed):?>
			$("#unassigned_tabbed").html(content);
		<?else:?>
			var last = $('input[name$="tabs"]').length;
			var elementId = "simpleComplete";
			$('.tabs').append("<span id='"+elementId+"' class='status vhshift' style='display: none;'>"+content+"&nbsp;</span>");
			if ($('#tab'+this_tab).is(':checked')) {
				$('#'+elementId).show();
			}
			$('#tab'+this_tab).bind({click:function(){$('#'+elementId).show();}});
			for (var x=1; x<=last; x++) if(x != this_tab) $('#tab'+x).bind({click:function(){$('#'+elementId).hide();}});
		<?endif;?>
		$('.complete-switch').switchButton({ labels_placement: "left", on_label: 'Complete', off_label: 'Simple', checked: $.cookie('unassigned-complete-view') != 'false'});
		$('.complete-switch').change(function () {
			$('.show-complete').toggle('slow');
			$.cookie('unassigned-complete-view', $('.complete-switch').is(':checked') ? 'true' : 'false', { expires: 3650 });
		});
	});
</script>

<script>
function cleanUp() {
  if (document.hasFocus()) {
    $('input[value="Downloading..."]').val('Download').prop('disabled',false);
    $.post('/webGui/include/Download.php',{cmd:'delete',file:'<?=$zip?>'});
  } else {
    setTimeout(cleanUp,4000);
  }
}
function getlog() {
  $('input[value="Download"]').val('Downloading...').prop('disabled',true);
  $.post('/webGui/include/Download.php',{cmd:'save',source:'/var/log/unassigned.devices.log',file:'<?=$zip?>'},function(zip) {
    location = zip;
    setTimeout(cleanUp,4000);
  });
}
</script>

<style>
	table.usb_disks thead tr>td{text-align:left;width:8%;padding-left:12px;}
	table.usb_disks {padding:0px;margin:-21px 0px 22px 0px;border-collapse:collapse;white-space:nowrap;}
	table.usb_disks tr>td{text-align:left;width:8%;padding-left:12px;padding-right:0;white-space:nowrap;}
	table.usb_disks tr>td+td+td{min-width:0px;}
	table.usb_disks tr>td+td+td+td{text-align:center;padding-left:0;padding-right:12px;width:auto;min-width:0px;}
	table.usb_disks tr>td+td+td+td+td+td{text-align:right;padding-left:0;padding-right:12px;width:auto;}
	table.usb_disks tr>td+td+td+td+td+td+td+td+td+td{text-align:left;padding:0px 0px 0px 12px;width: 75px;}
	table.usb_disks tr>td+td+td+td+td+td+td+td+td+td+td+td{text-align:right;padding-left:0;padding-right:12px;}

	table.usb_absent thead tr>td{text-align:left;width:8%;padding-left:12px;}
	table.usb_absent tr>td{text-align:left;width:8%;padding-left:12px;padding-right:0;white-space:nowrap;}
	table.usb_absent tr>td+td{text-align:left;width:auto;}
	table.usb_absent tr>td+td+td+td{text-align:right;padding-left:0;padding-right:12px;width: 5em;}

	table.samba_mounts thead tr>td{text-align:left;width:8%;padding-left:12px;}
	table.samba_mounts tr>td{text-align:left;width:8%;padding-left:12px;padding-right:0;white-space:nowrap;}
	table.samba_mounts tr>td+td{text-align:left;width:auto;}
	table.samba_mounts tr>td+td+td+td+td+td+td+td{text-align:left;padding:0px 0px 0px 12px;width: 75px;}
	table.samba_mounts tr>td+td+td+td+td+td+td+td+td{text-align:right;padding-left:0;padding-right:12px;}


	button[type=button].mount {margin:0px 14px 0 14px;}
	i.glyphicon{margin:0px 5px 0 5px;}
	i.hdd{margin:0px; 0px;font-size: 1.1em}
	i.partition{margin-left: 18px;}
	.exec{cursor: pointer;}
	i.glyphicon-append{margin:0px;font-size: 0.8em;position: relative; left:-0.3em;top:0.7em;}
	.underline{text-decoration: underline;}
	button.array {padding:2px 7px 2px 7px;}

	.switch-wrapper {
		display: inline-block;
		position: relative;
		top: 3px;
		vertical-align: middle;
	}
</style>

<script type="text/javascript">
	var display = <?=json_encode($display);?>;
	var vars = <?=json_encode($var);?>;
	var tab_usbdisks = $('input[name$="tabs"]').length;
	$('#tab'+tab_usbdisks).bind({click:function() {pin_tab(tab_usbdisks); detect_usb_disk_change(tab_usbdisks);}});
	$(function(){
		usb_disks(tab_usbdisks);
		detect_usb_disk_change(tab_usbdisks);
	});

	function openWindow_fsck(cmd,title,height,width) {
		var run = cmd;
		var top = (screen.height-height)/2;
		var left = (screen.width-width)/2;
		var options = 'resizeable=yes,scrollbars=yes,height='+height+',width='+width+',top='+top+',left='+left;
		window.open(run, 'log', options);
	}

	function get_preclear(device) {
		$.post(URL,{action:"get_preclear",device:device},function(data){if(data.preclear){$('#preclear_'+device).html(data.preclear);}},"json").always(function(){setTimeout('get_preclear("'+device+'")',5000);});
	}

	function startWaitMe(el) {
		<?if ($display['theme'] == 'white'):?>
			$(el).waitMe({effect:'ios',text:' ',bg:'rgba(255,255,255,0.9)',color:'#000',sizeW:'',sizeH:'',source:''});
		<?else:?>
			$(el).waitMe({effect:'ios',text:' ',bg:'rgba(0,0,0,0.9)',color:'#FFF',sizeW:'',sizeH:'',source:''});
		<?endif;?>
		$('.waitMe_content').css('top','40px');
	}

	function disk_op(el, op, device){
		// add spinning and disable button
		$(el).html("<i class='fa fa-circle-o-notch fa-spin'></i> "+(op == "mount" ? "Mounting" : "Unmounting")+" ...");
		$(el).prop("disabled","true");
		// disable partition buttons
		td = $(el).closest('td');
		tr = td.closest('tr');
		part = tr.is('.toggle-parts');
		disk = tr.find('span[hdd]').attr("hdd");
		if (disk) {
			tr.siblings('tr.toggle-'+disk).find('.mount').html(td.html());
		} else if (part) {
			tr.prev('tr.toggle-disk').find('.mount').html(td.html());
		}
		$.post(URL,{'action':op,'device':device});
	}

	function pin_tab(n) {
		$.removeCookie('one',{path:'/'});
		$.cookie('tab','tab'+n,{path:'/'});
	}

	function usb_disks(tabnum) {
		startWaitMe('#usb_devices_list');
		$.post(URL,{action:"get_content",display:display},function(data) {if (data) $('#usb_devices_list').html(data);});
	}

	function detect_usb_disk_change(tabnum) {
		if ($('#tab'+tabnum).is(':checked')) {
			clearTimeout(timers.usbdisks);
			$.post(URL,{action:"detect"},function(data){if(data.reload){usb_disks(tabnum);$.post(URL,{action:"remove_hook"});}},"json").always(function(){timers.usbdisks=setTimeout('detect_usb_disk_change('+tabnum+')',5000);});
		} else {
			clearTimeout(timers.usbdisks);
		}
		return false;
	}

	function remove_disk_config(serial){
		var title = 'Remove config';
		$( "#dialog-confirm" ).html(serial);
		$( "#dialog-confirm" ).append( "<br><br><span style='color: #E80000;'>Are you sure?</span>" );
		$( "#dialog-confirm" ).dialog({
			title: title,
			resizable: false,
			width: 500,
			modal: true,
			show : {effect: 'fade' , duration: 250},
			hide : {effect: 'fade' , duration: 250},
			buttons: {
				"Yes": function() {
					$( this ).dialog( "close" );
					$.post(URL,{action:"remove_config",serial:serial},"json");
					usb_disks(tab_usbdisks);
				},
				Cancel: function() {
					$( this ).dialog( "close" );
					$( this ).html("");
				}
			}
		});
	}

	function remove_samba_config(device){
		var title = 'Remove SMB mount';
		$( "#dialog-confirm" ).html("<dl><dt>Source:</dt><dd>"+device+"</dd></dl>");
		$( "#dialog-confirm" ).append( "<dl><dt><span style='color: #E80000;'>Are you sure?</span></dd></dl>" );
		$( "#dialog-confirm" ).dialog({
			title: title,
			resizable: false,
			width: 500,
			modal: true,
			show : {effect: 'fade' , duration: 250},
			hide : {effect: 'fade' , duration: 250},
			buttons: {
				"Yes": function() {
					$( this ).dialog( "close" );
					$.post(URL,{action:"remove_samba_config",device:device},"json");
					usb_disks(tab_usbdisks);
				},
				Cancel: function() {
					$( this ).dialog( "close" );
					$( this ).html("");
				}
			}
		});
	}

	function showInput(){
		$(this).off('click');
		$(this).siblings('input').each(function(){$(this).show();});
		$(this).siblings('input').focus();
		$(this).hide();
	}

	function hideInput(){
		$(this).hide();
		$(this).siblings('span').show();
		$(this).siblings('span').click(showInput);
	}

	function openPreclear(device) {
		var width=900;
		var height=600;
		var top = (screen.height-height)/2;
		var left = (screen.width-width)/2;
		var options = 'resizeable=yes,scrollbars=yes,height=600,width=900,top='+top+',left='+left;
		window.open('/plugins/preclear.disk/Preclear.php?action=show_preclear&device='+device, 'Preclear', options);
	}

	function add_samba_share(){
		var title = 'Add Remote SMB Share';
		$( "#dialog-confirm" ).html($("#add-remote-defaults").html());
		$( "#dialog-confirm" ).find(".switch").switchButton({labels_placement:"right",on_label:'YES',off_label:'NO'});
		$( "#dialog-confirm" ).find(".switch-button-background").css("margin-top", "6px");
		$( "#dialog-confirm" ).dialog({
		title: title,
		resizable: false,
		width: 600,
		modal: true,
		show : {effect: 'fade' , duration: 250},
		hide : {effect: 'fade' , duration: 250},
		buttons: {
			"Add": function() {
				$( this ).dialog( "close" );
				var opts = new Object();
				opts["action"]   = "add_samba_share";
				opts["PROTOCOL"] = getVal(this,"PROTOCOL");
				opts["IP"]       = getVal(this,"IP");
				opts["USER"]     = getVal(this,"USER");
				opts["PASS"]     = getVal(this,"PASS");
				opts["SHARE"]    = getVal(this,"SHARE");
				if (opts.SHARE && opts.IP) {
					$.post(URL,opts).done(function(){usb_disks(tab_usbdisks);});
				}
			},
			Cancel: function() {
				$( this ).dialog( "close" );
			}
		}
		});
	}

	function load_hosts(el, action) {
		var target = $(el).parents("div").find("*[name='IP']");
		var old = $(el).html();
		$(el).html("<i class='fa fa-circle-o-notch fa-spin'></i> Searching ...");
		$.post(URL,{'action':action,'var':vars}).done(function(data){
			$(el).html(old);
			if (data) {
				var hosts = data.split('\n');
				if (hosts.length) {
					var add = "<select name='IP'>";
					for(var i = 0;i < hosts.length;i++){
						if (hosts[i].length) {
							add += "<option value='"+hosts[i]+"'>"+hosts[i]+"</option>";
						}
					}
					target.replaceWith(add+"</select>")
				}
			}
		});
	}

	function load_shares(el, action) {
		var old = $(el).html();
		var target = $(el).parents("div").find("*[name='SHARE']");
		$(el).html("<i class='fa fa-circle-o-notch fa-spin'></i> Loading ...");
		var opts = new Object();
		opts["action"] = action;
		opts["IP"] = getVal("#dialog-confirm","IP");
		opts["USER"] = getVal("#dialog-confirm","USER");
		opts["PASS"] = getVal("#dialog-confirm","PASS");
		$.post(URL,opts).done(function(data){
			$(el).html(old);
			if (data) {
				var shares = data.split('\n');
				if (shares.length) {
					var add = "<select name='SHARE'>";
					for(var i = 0;i < shares.length;i++){
						if (shares[i].length) {
							add += "<option value='"+shares[i]+"'>"+shares[i]+"</option>";
						}
					}
					target.replaceWith(add+"</select>")
				}
			}
		});
	}

	function getVal(el, name) {
		el = $(el).find("*[name="+name+"]");
		return value = ( $(el).attr('type') == 'checkbox' ) ? ($(el).is(':checked') ? "on" : "off") : $(el).val();
	}

	function format_disk(bt, type, device){
		var title = 'Formatting '+type+': '+device;
		$( "#dialog-confirm" ).html($("#format_disk").html());
		$( "#dialog-confirm" ).dialog({
			title: title,
			resizable: false,
			width: 600,
			modal: true,
			show : {effect: 'fade' , duration: 250},
			hide : {effect: 'fade' , duration: 250},
			buttons: {
				"Format": function() {
					if (getVal(this,"CONFIRM") != "Yes") {return false;}
					var bc = $(bt).html();
					$(bt).prop('disabled',true);
					$(bt).html("<i class='fa fa-circle-o-notch fa-spin'></i> Formatting ...");
					$( this ).dialog( "close" );
					fs = getVal(this,"FS");
					$.post(URL,{action:"format_"+type,device:device,fs:fs},"json").always(function(data){$(bt).html( data.result ? "Formated" : "Format failed..." ) });
				},
				Cancel: function() {
					$( this ).dialog( "close" );
					$( this ).html("");
				}
			}
		});
	}

	function rm_partition(bt, device, partition){
		var title = 'Remove partition '+partition+' from disk '+device;
		$( "#dialog-confirm" ).html($("#rm_partition").html());
		$( "#dialog-confirm" ).dialog({
			title: title,
			resizable: false,
			width: 600,
			modal: true,
			show : {effect: 'fade' , duration: 250},
			hide : {effect: 'fade' , duration: 250},
			buttons: {
				"Remove": function() {
					if (getVal(this,"CONFIRM") != "Yes") {return false;}
					var bc = $(bt).html();
					$(bt).prop('disabled',true);
					$(bt).html("<i class='fa fa-circle-o-notch fa-spin'></i> Removing ...");
					$( this ).dialog( "close" );
					fs = getVal(this,"FS");
					$.post(URL,{action:"rm_partition",device:device,partition:partition},"json").always(function(){usb_disks(tab_usbdisks);});
				},
				Cancel: function() {
					$( this ).dialog( "close" );
					$( this ).html("");
				}
			}
		});
	}

	function load_samba_opts(el) {
		p = $(el).parents("div").find(".options");
		if ($(el).val() == "SMB") {
			p.html($("#add-samba-defaults").html());
		} else if ($(el).val() == "NFS") {
			p.html($("#add-nfs-defaults").html());
		}
	}

	function sendLog() {
		$.post(URL,{'action':'send_log'}).always(function(){notifier();});
	}
</script>

<div style='display: inline; float: right; margin: -58px -14px;' id='unassigned_tabbed'></div>
<div class="font_preload" style="opacity: 0"><span style="font-family: 'FontAwesome', Arial, sans-serif;"></span></div>
<form id="formUsbMount" method="POST" action="/update.php" target="progressFrame">
<input type="hidden" id="cmdUsbMount" name="#command" value="" />
</form>
<div id="dialog-confirm" style="display:none;" title="Dialog Title"></div>
<div id="dialog-samba" style="display:none;" title=""></div>

<div id="add-remote-defaults" style="display:none;">
	<dl>
		<dt>Protocol:</dt>
		<dd>
			<select name="PROTOCOL" onchange="load_samba_opts(this);">
			<option>Choose</option>
			<option value="SMB">SMB</option>
			<option value="NFS">NFS</option>
			</select>
		</dd>
	</dl>
	<div class="options"></div>
</div>

<div id="add-nfs-defaults" style="display:none;">
	<dl>
		<dt>IP/Host:</dt>
		<dd><span class="samba_hosts"></dd>
		<dd><input type="text" name="IP"></span></dd>
		<dt>Username:</dt>
		<dd><input type="text" name="USER"></dd>
		<dt>Password:</dt>
		<dd><input type="password" name="PASS"></dd>
		<dt>Share:</dt>
		<dd><span class="samba_shares"><input type='text' name='SHARE'></span></dd>
		<dt>&nbsp;</dt>
		<dd><button type="button" onclick="load_shares(this, 'list_nfs_shares');">Load Shares</button></dd>
	</dl>
</div>

<div id="add-samba-defaults" style="display:none;">
	<dl>
		<dt>IP/Host:</dt>
		<dd><input type="text" name="IP"></dd>
		<dt>&nbsp;</dt>
		<dd><button type="button" onclick="load_hosts(this, 'list_samba_hosts');">Search for servers in <?=$var['WORKGROUP'];?></button></dd>
		<dt>Username:</dt>
		<dd><input type="text" name="USER"></dd>
		<dt>Password:</dt>
		<dd><input type="password" name="PASS"></dd>
		<dt>Share:</dt>
		<dd><input type='text' name='SHARE'></dd>
		<dt>&nbsp;</dt>
		<dd><button type="button" onclick="load_shares(this, 'list_samba_shares');">Load Shares</button></dd>
	</dl>  
</div>


<div id="format_disk" style="display:none;">
	<dl>
		<dt>Filesystem:</dt>
		<dd>
			<select name="FS">
				<option value="xfs">XFS</option>
				<option value="btrfs">BTRFS</option>
				<option value="ntfs">NTFS</option>
				<option value="ext4">EXT4</option>
				<option value="exfat">exFAT</option>
				<option value="fat32">FAT32</option>
			</select>
		</dd>
		<dt>Type<span class="red">Yes</span>to confirm:</dt>
		<dd><input type="text" name="CONFIRM" style="width: 60px"></dd>
	</dl>
</div>

<div id="rm_partition" style="display:none;">
	<dl>
		<dt>Type<span class="red">Yes</span>to confirm:</dt>
		<dd><input type="text" name="CONFIRM" style="width: 60px"></dd>
	</dl>
</div>

<div id="usb_devices_list">
	<table class='usb_disks' id='usb_table'>
		<thead><tr><td>Device</td><td>Identification</td><td></td><td>Temp</td><td>FS</td><td>Size</td><td>Open files</td><td>Used</td><td>Free</td><td>Auto mount</td><td>Log</td><td>Script</td></tr></thead>
		<tbody><tr><td colspan='12' style='text-align:center;font-weight:bold;'></td></tr></tbody>
	</table>
</div>

<blockquote class='inline_help'>
	<p>You can mount USB devices, sata drives, and Remote SMB shares with unassigned devices.  Any devices with the auto mount switch on will be mounted when the array is started.  XFS and EXT4 formatted drives are mounted with discard (trim) for SSD drives.  All drives and SMB Mounts are unmounted when the array is stopped on the 'unmounting_disks' event.</p>
	<p>If you want to share your drive, you can turn on the Share switch.  The default for Remote SMB shares is Public read/write access.  Enable SMB Security by user in the Unassigned Devices Settings.  NFS shares are exported and access is read/write.  The export of NFS devices is enabled in the Unassigned Devices settings.  You can also enable a common script that will be executed on every disk mount.</p>
	<p>Additional options are available when you click on the device identification.  When the disk is unmounted, the mount name of the device can be changed.  A disk can be formatted and an fsck run to check the disk.</p>
	<p>Unassigned devices includes scripts that are used for mounting and unmounting devices and SMB mounts.  These scripts can be used from the command line if necessary.
	<p>Unassigned devices script:
		<li>'/usr/local/sbin/rc.unassigned mount auto' - all devices and SMB mounts set to auto mount will be mounted.</li>
		<li>'/usr/local/sbin/rc.unassigned umount auto' - all devices and SMB mounts set to auto mount will be unmounted.</li>
		<li>'/usr/local/sbin/rc.unassigned umount all' - all devices and SMB mounts are unmounted in preparation for shutting down the array.</li>
	</p>
</blockquote>

<blockquote class='inline_help'>
	<input type="button" value="Download Log" onclick="getlog()">
	<p>Click on the <strong>'Download Log'</strong> button to download a zip file copy of the unassigned devices log.</p>
</blockquote>
